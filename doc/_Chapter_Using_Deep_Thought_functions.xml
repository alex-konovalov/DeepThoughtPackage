<?xml version="1.0" encoding="UTF-8"?>

<!-- This is an automatically generated file. -->
<Chapter Label="Chapter_Using_Deep_Thought_functions">
<Heading>Using Deep Thought functions</Heading>

In the following sections, functions provided for computing Deep Thought polynomials and using them for calculations are listed.
<Section Label="Chapter_Using_Deep_Thought_functions_Section_Computing_Deep_Though_polynomials">
<Heading>Computing Deep Though polynomials</Heading>

<ManSection>
  <Func Arg="coll" Name="DTP_DTapplicability" />
 <Returns>boolean
</Returns>
 <Description>
Checks the collector <C>coll</C> for applicability of Deep Thought functions. Note that depending on consistency some functions may be applicable, while others are not. Information on the applicability and which type of Deep Thought polynomials are suggested is printed to the terminal. Here, "+" means that the following property is fulfilled, otherwise there is a "-". The function returns <C>false</C> if Deep Thought is not applicable to the collector <C>coll</C> and <C>true</C> otherwise. Anyway, even if <C>true</C> is returned, <Emph>not all functions need to be applicable</Emph> (in case of inconsistenies).
 </Description>
</ManSection>


<ManSection>
  <Func Arg="coll, rs_flag, [,isConfluent]" Name="DTP_DTobjFromCollector" />
 <Returns>a DTobj
</Returns>
 <Description>
Computes a DTobj for the collector coll, either with polynomials of type f_rs (if <C> rs_flag = true </C> or with polynomials of type f_r otherwise. The optional argument <C>isConfluent</C> is a boolean value. If <C>isConfluent = false</C>, then the collector <C>coll</C> is supposed to be not consistent. When using the returned <C>DTobj</C> for multiplication, the results are returned as reduced words which are not necessarily in normal form. If <C>isConfluent</C> is not provided or <C>isConlf = true</C>, the collector is assumed to be consistent and results returned in computations are in normal form, unless otherwise stated. If <C>isConlf = false</C>, the collector is assumed to be not consistent (but it still may be consistent) and results of computations are generally not in normal form.
 </Description>
</ManSection>


<ManSection>
  <Func Arg="coll, [, isConfluent]" Name="DTP_DTpols_r" />
 <Returns>a DTobj list
</Returns>
 <Description>
Computes the Deep Thought polynomials of type <Math>f_r</Math> and stores them in <C>DTobj</C>. The optional argument <C>isConfluent</C> is a boolean value. If <C>isConfluent = false</C>, then the collector <C>coll</C> is supposed to be not consistent. When using the returned <C>DTobj</C> for multiplication, the results are returned as reduced words which are not necessarily in normal form. If <C>isConfluent</C> is not provided or <C>isConlf = true</C>, the collector is assumed to be consistent and results returned in computations are in normal form, unless otherwise stated. If <C>isConlf = false</C>, the collector is assumed to be not consistent (but it still may be consistent) and results of computations are generally not in normal form.
 </Description>
</ManSection>


<ManSection>
  <Func Arg="coll, [, isConfluent]" Name="DTP_DTpols_rs" />
 <Returns>a DTobj list
</Returns>
 <Description>
Computes the Deep Thought polynomials of type <Math>f_{rs}</Math> and stores them in <C>DTobj</C>. The optional argument <C>isConfluent</C> is a boolean value. If <C>isConfluent = false</C>, then the collector <C>coll</C> is supposed to be not consistent. When using the returned <C>DTobj</C> for multiplication, the results are returned as reduced words which are not necessarily in normal form. If <C>isConfluent</C> is not provided or <C>isConlf = true</C>, the collector is assumed to be consistent and results returned in computations are in normal form, unless otherwise stated. If <C>isConlf = false</C>, the collector is assumed to be not consistent (but it still may be consistent) and results of computations are generally not in normal form.
 </Description>
</ManSection>


</Section>


<Section Label="Chapter_Using_Deep_Thought_functions_Section_Computations_with_Deep_Thought_polynomials">
<Heading>Computations with Deep Thought polynomials</Heading>

<ManSection>
  <Func Arg="expvec, int, DTobj" Name="DTP_Exp" />
 <Returns>an exponent vector
</Returns>
 <Description>
Computes the exponent vector of <C>expvec</C><Math>^{int}</Math>. If <C>DTobj[4] = true</C>, then the result is in normal form.
 </Description>
</ManSection>


<ManSection>
  <Func Arg="expvec, DTobj" Name="DTP_Inverse" />
 <Returns>an exponent vector
</Returns>
 <Description>
Computes the exponent vector of the inverse of the element corresponding to <C>expvec</C>. If <C>DTobj[4] = true</C>, then the result describes a normal form.
 </Description>
</ManSection>


<ManSection>
  <Func Arg="expvec, coll" Name="DTP_IsInNormalForm" />
 <Returns>boolean or positive integer
</Returns>
 <Description>
Checks whether <C>expvec</C> is in normal form or not. If yes, the return value is <C>true</C>. Otherwise the return value is the smallest generator index for which the normal form condition is violated, i.e. for which the relative order <C>RelativeOrder(coll)[i]</C> is non-zero, and <C>expvec[i]</C> &lt; <C>0</C> or <C>expvec[i]</C> <Math>\geq</Math> <C>RelativeOrder(coll)[i]</C>.
 </Description>
</ManSection>


<ManSection>
  <Func Arg="expvec1, expvec2, DTobj" Name="DTP_Multiply" />
 <Returns>an exponent vector
</Returns>
 <Description>
Computes the exponent vector of the product <C> expvec1 * expvec2 </C> using the Deep Thought polynomials. This function determines automatically which type of polynomials are stored in <C>DTobj</C> and calls either <C>DTP_Multiply_r</C> or <C>DTP_Multiply_rs</C>. If <C>DTobj[4] = true</C>, then the result is returned in normal form.
 </Description>
</ManSection>


<ManSection>
  <Func Arg="expvec1, expvec2, DTobj" Name="DTP_Multiply_r" />
 <Returns>an exponent vector
</Returns>
 <Description>
Computes the exponent vector of the product <C> expvec1 * expvec2 </C> using the Deep Thought polynomials of type <Math>f_r</Math>. If <C>DTobj[4] = true</C>, then the result is returned in normal form.
 </Description>
</ManSection>


<ManSection>
  <Func Arg="expvec1, expvec2, DTobj" Name="DTP_Multiply_rs" />
 <Returns>an exponent vector
</Returns>
 <Description>
Computes the exponent vector of the product <C> expvec1 * expvec2 </C> using the Deep Thought polynomials of type <Math>f_{rs}</Math>. If <C>DTobj[4] = true</C>, then the result is returned in normal form.
 </Description>
</ManSection>


<ManSection>
  <Func Arg="expvec, DTobj" Name="DTP_NormalForm" />
 <Returns>an exponent vector
</Returns>
 <Description>
Computes the exponent vector of the normal form of <C>expvec</C>.
 </Description>
</ManSection>


<ManSection>
  <Func Arg="expvec, DTobj" Name="DTP_Order" />
 <Returns>positive integer or infinity
</Returns>
 <Description>
Computes the order of the element described by <C>expvec</C>.
 </Description>
</ManSection>


<ManSection>
  <Func Arg="expvec1, expvec2, DTobj" Name="DTP_SolveEquation" />
 <Returns>an exponent vector
</Returns>
 <Description>
Computes the exponent vector of the element corresponding to <C>expvec1</C><Math>^{-1}</Math> <C>* expvec2</C>, i.e. the result solves the equation <C>expvec1 * result = expvec2</C>. If <C>DTobj[4] = true</C>, then the result
describes a normal form.
 </Description>
</ManSection>


</Section>


<Section Label="Chapter_Using_Deep_Thought_functions_Section_Accessing_Deep_Thought_polynomials">
<Heading>Accessing Deep Thought polynomials</Heading>

In this sections, functions which can be used to display a <C>DTobj</C>, or the Deep Thought polynomials only, are documented. Furthermore, Deep Thought polynomials stored in a <C>DTobj</C> can be converted to &GAP; polynomials.
<ManSection>
  <Func Arg="DTobj" Name="DTP_Display_DTobj" />
 <Returns>nothing
</Returns>
 <Description>
Prints information about <C>Dtobj</C> to the terminal. In particular, the Deep Thought polynomials are printed in human-readable form.
 </Description>
</ManSection>


<ManSection>
  <Func Arg="f_r" Name="DTP_Display_f_r" />
 <Returns>nothing
</Returns>
 <Description>
Prints the polynomials f_r computed by <C>DTP_DTpols_r</C> and stored in <C>DTobj[2]</C> to the terminal in a human-readable form.
 </Description>
</ManSection>


<ManSection>
  <Func Arg="f_rs" Name="DTP_Display_f_rs" />
 <Returns>nothing
</Returns>
 <Description>
Prints the polynomials f_rs computed by <C>DTP_DTpols_rs</C> and stored in <C>DTobj[2]</C> to the terminal in a human-readable form.
 </Description>
</ManSection>


<ManSection>
  <Func Arg="DTobj" Name="DTP_pols2GAPpols" />
 <Returns>list
</Returns>
 <Description>
Converts the Deep Thought polynomials stored in <C>DTobj[2]</C> to &GAP; polynomials and returns them in a list together with their polynomial ring.
 </Description>
</ManSection>


</Section>


</Chapter>

